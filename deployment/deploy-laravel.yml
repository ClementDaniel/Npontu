---
- hosts: servers
  gather_facts: no
  become: true
  roles:
    - role: common
      tasks:
        - apt:
            name: Install dependencies
            state: present
            name: ['git', 'docker', 'python3-pip']
        - pip:
            name: ['ansible-role-docker', 'ansible-role-mysql']
    - role: application
      tasks:
        - name: Clone application code
          git:
            repo: "https://github.com/ClementDaniel/Npontu.git"
            dest: /var/www/app
            version: "main" 

        - name: Install PHP and Composer
          apt:
            name: "{{ item }}"
            state: present
          loop:
            - php
            - php-cli
            - php-mbstring
            - unzip
          when: ansible_distribution == 'Ubuntu'  # Adjust for your distribution

        - name: Install Laravel dependencies
          composer:
            command: install
            working_dir: "/var/www/laravel"

        - name: Copy environment file
          copy:
            src: ".env.example"
            dest: "/var/www/laravel/.env"

        - name: Generate Laravel application key
          command: php artisan key:generate
          args:
            chdir: "/var/www/laravel"

        - name: Set permissions
          file:
            path: "/var/www/laravel"
            state: directory
            recurse: yes
            mode: "0755"

        - name: Configure Apache 
          template:
            src: "laravel.conf.j2"
            dest: "/etc/apache2/sites-available/laravel.conf"
          notify:
            - Reload Apache

      handlers:
        - name: Reload Apache
          service:
            name: apache2
            state: reloaded


        - name: Build Docker image
          docker_image:
            name: laravel-app
            path: /var/www/app
        - name: Run Docker container
          docker_container:
            name: laravel-app
            image: laravel-app
            ports:
              - "80:80"

    - role: database
      tasks:
        # Configure your MySQL server here using ansible-role-mysql
        # Include tasks for creating database, users, and grants
    - role: security
      tasks:
        # Implement security best practices like firewall rules, access control
        # Consider using security-focused Ansible roles
    - role: monitoring_logging
      tasks:
        # Configure monitoring tools like Prometheus and logging tools like ELK Stack
        # Use Ansible roles or Docker Compose for automated setup

- hosts: localhost
  tasks:
    - name: Install dependencies
      apt:
        name: ['composer']
    - name: Clone application code
      git:
        repo: "https://github.com/ClementDaniel/Npontu.git"
        dest: /var/www/app
    - name: Install composer dependencies
      composer:
        chdir: /var/www/app



